/**
 * Provide a `selectize` search box.
 *
 * @param {Element} _parentElement the child element, for example that returned by document.getElementById("#myname"). Note that this SearchBox requires a parentElement, rather than a string for parentSelector as in the constructor of other components.
 * @param {string} _myid the string specifying the id of this SearchBox
 * @param {array} _data
 * @param {object} _options the json object describing vis option, for example
 * { width: 200px;
 *   height: 20px;
 *   valueField: 'Name';
 *   labelField: 'prettyPrint',
 *   searchField: 'id'}
 * @param {eventHandler} _eventHandler an event handler generated by d3.dispatch("someEvent")
 */
SearchBox = function (_parentElement, _myid, _data, _options, _eventHandler) {
    var self = this;
    self.parentElement = _parentElement;
    self.data = _data;
    self.options = _options;
    self.ctrlID = _myid;
    self.eventHandler = _eventHandler;
    self.init();
};

SearchBox.prototype.init = function () {
    var self = this;
    var sbox = document.createElement("input");
    sbox.setAttribute("type", "text");
    sbox.setAttribute("id", self.ctrlID);
    sbox.setAttribute("value", ",");
    
    self.parentElement.appendChild(sbox);

    $("#" + self.ctrlID).selectize({
        plugins: ['remove_button'],
        maxItems: null,
        create: false,
        valueField: self.options.valueField,
        labelField: self.options.labelField,
        searchField: self.options.searchField,
        openOnFocus: false,
        closeAfterSelect: true,
        options: self.data, // self.extractOptions(self.options.valueField, self.options.labelField, self.options.searchField),
        render: {
            option: function (item, escape) {
                return '<span class="geneName">' + item[self.options.labelField] + '</span>'
            }
        },
        onChange: function (value) {
            self.eventHandler.call("selectionChanged", self, value.split(","));
        }
    });
    
   
};


/** -----------------------------
 *      Wrappers of Selectize API 
 * ------------------------------
*/

SearchBox.prototype.clear = function(silent) {
    $("#" + this.ctrlID)[0].selectize.clear(silent);
};

SearchBox.prototype.setValue = function(value, silent) {
    $("#" + this.ctrlID)[0].selectize.setValue(value, silent);
};
